"""Initial database

Revision ID: 480d173bf43f
Revises:
Create Date: 2017-08-24 14:02:59.767150

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = '480d173bf43f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('LTIProvider',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('key', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('Permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('default_value', sa.Boolean(), nullable=True),
    sa.Column('course_permission', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Permission_course_permission'), 'Permission', ['course_permission'], unique=False)
    op.create_index(op.f('ix_Permission_name'), 'Permission', ['name'], unique=True)
    op.create_table('Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('lti_course_id', sa.Unicode(), nullable=True),
    sa.Column('lti_provider_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['lti_provider_id'], ['LTIProvider.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lti_course_id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lti_user_id', sa.Unicode(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('Role_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.Unicode(), nullable=True),
    sa.Column('password', sqlalchemy_utils.PasswordType, nullable=True),
    sa.ForeignKeyConstraint(['Role_id'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('lti_user_id')
    )
    op.create_table('roles-permissions',
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['Permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ondelete='CASCADE')
    )
    op.create_table('Assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('state', sa.Enum('hidden', 'open', 'done', name='_assignmentstateenum'), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('Course_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('lti_assignment_id', sa.Unicode(), nullable=True),
    sa.Column('lti_outcome_service_url', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['Course_id'], ['Course.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lti_assignment_id')
    )
    op.create_table('Course_Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('Course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Course_id'], ['Course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Snippet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.Unicode(), nullable=False),
    sa.Column('value', sa.Unicode(), nullable=False),
    sa.Column('User_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['User_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AssignmentLinter',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('config', sa.Unicode(), nullable=False),
    sa.Column('Assignment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Assignment_id'], ['Assignment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AssignmentResult',
    sa.Column('sourcedid', sa.Unicode(), nullable=True),
    sa.Column('User_id', sa.Integer(), nullable=False),
    sa.Column('Assignment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Assignment_id'], ['Assignment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['User_id'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('Assignment_id', 'User_id')
    )
    op.create_table('RubricRow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Assignment_id', sa.Integer(), nullable=True),
    sa.Column('header', sa.Unicode(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['Assignment_id'], ['Assignment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Work',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Assignment_id', sa.Integer(), nullable=True),
    sa.Column('User_id', sa.Integer(), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('comment', sa.Unicode(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Assignment_id'], ['Assignment.id'], ),
    sa.ForeignKeyConstraint(['User_id'], ['User.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['assigned_to'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_roles-permissions',
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('course_role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_role_id'], ['Course_Role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['permission_id'], ['Permission.id'], ondelete='CASCADE')
    )
    op.create_table('users-courses',
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['Course_Role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ondelete='CASCADE')
    )
    op.create_table('File',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Work_id', sa.Integer(), nullable=True),
    sa.Column('extension', sa.Unicode(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('filename', sa.Unicode(), nullable=True),
    sa.Column('modification_date', sa.DateTime(), nullable=True),
    sa.Column('fileowner', sa.Enum('student', 'teacher', 'both', name='fileowner'), nullable=False),
    sa.Column('is_directory', sa.Boolean(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('is_directory = false OR extension IS NULL'),
    sa.ForeignKeyConstraint(['Work_id'], ['Work.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['File.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LinterInstance',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('state', sa.Enum('running', 'done', 'crashed', name='linterstate'), nullable=False),
    sa.Column('Work_id', sa.Integer(), nullable=True),
    sa.Column('tester_id', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['Work_id'], ['Work.id'], ),
    sa.ForeignKeyConstraint(['tester_id'], ['AssignmentLinter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RubricItem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Rubricrow_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('points', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Rubricrow_id'], ['RubricRow.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Comment',
    sa.Column('File_id', sa.Integer(), nullable=False),
    sa.Column('User_id', sa.Integer(), nullable=True),
    sa.Column('line', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['File_id'], ['File.id'], ),
    sa.ForeignKeyConstraint(['User_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('File_id', 'line')
    )
    op.create_table('LinterComment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('File_id', sa.Integer(), nullable=True),
    sa.Column('linter_id', sa.Unicode(), nullable=True),
    sa.Column('line', sa.Integer(), nullable=True),
    sa.Column('linter_code', sa.Unicode(), nullable=True),
    sa.Column('comment', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['File_id'], ['File.id'], ),
    sa.ForeignKeyConstraint(['linter_id'], ['LinterInstance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_LinterComment_File_id'), 'LinterComment', ['File_id'], unique=False)
    op.create_table('work_rubric_item',
    sa.Column('work_id', sa.Integer(), nullable=True),
    sa.Column('rubricitem_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rubricitem_id'], ['RubricItem.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['work_id'], ['Work.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('work_rubric_item')
    op.drop_index(op.f('ix_LinterComment_File_id'), table_name='LinterComment')
    op.drop_table('LinterComment')
    op.drop_table('Comment')
    op.drop_table('RubricItem')
    op.drop_table('LinterInstance')
    op.drop_table('File')
    op.drop_table('users-courses')
    op.drop_table('course_roles-permissions')
    op.drop_table('Work')
    op.drop_table('RubricRow')
    op.drop_table('AssignmentResult')
    op.drop_table('AssignmentLinter')
    op.drop_table('Snippet')
    op.drop_table('Course_Role')
    op.drop_table('Assignment')
    op.drop_table('roles-permissions')
    op.drop_table('User')
    op.drop_table('Course')
    op.drop_table('Role')
    op.drop_index(op.f('ix_Permission_name'), table_name='Permission')
    op.drop_index(op.f('ix_Permission_course_permission'), table_name='Permission')
    op.drop_table('Permission')
    op.drop_table('LTIProvider')
    # ### end Alembic commands ###
