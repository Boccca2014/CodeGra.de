"""Prepare assignments for LTI 1.3

Revision ID: ab7cbfb13ec6
Revises: e9b4a9fe0b85
Create Date: 2020-02-10 16:14:18.291116

"""
import json

import sqlalchemy as sa
from alembic import op
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision = 'ab7cbfb13ec6'
down_revision = 'e9b4a9fe0b85'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'Assignment',
        sa.Column('lti_grade_service_data', sa.JSON(), nullable=True)
    )
    op.create_unique_constraint(
        'ltiassignmentid_courseid_unique', 'Assignment',
        ['lti_assignment_id', 'Course_id']
    )
    op.drop_constraint(
        'Assignment_lti_assignment_id_key', 'Assignment', type_='unique'
    )

    conn = op.get_bind()
    lti_assigs = conn.execute(
        text(
            'SELECT id, lti_outcome_service_url FROM "Assignment" WHERE'
            ' lti_outcome_service_url IS NOT NULL'
        )
    )
    for assig_id, lti_url in lti_assigs:
        conn.execute(
            text(
                'UPDATE "Assignment" SET lti_grade_service_data = :lti_url '
                'WHERE id = :assig_id'
            ),
            assig_id=assig_id,
            lti_url=json.dumps(lti_url)
        )

    op.drop_column('Assignment', 'lti_outcome_service_url')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'Assignment',
        sa.Column(
            'lti_outcome_service_url',
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True
        )
    )

    conn = op.get_bind()
    lti_assigs = conn.execute(
        text(
            'SELECT id, lti_grade_service_data FROM "Assignment" WHERE'
            ' lti_grade_service_data IS NOT NULL'
        )
    )
    for assig_id, grade_service_data in lti_assigs:
        if not isinstance(grade_service_data, str):
            raise Exception('Only LTI1.1 assigs can be downgraded')
        conn.execute(
            text(
                'UPDATE "Assignment" SET lti_outcome_service_url = :lti_url '
                'WHERE id = :assig_id'
            ),
            assig_id=assig_id,
            lti_url=grade_service_data,
        )

    op.create_unique_constraint(
        'Assignment_lti_assignment_id_key', 'Assignment',
        ['lti_assignment_id']
    )
    op.drop_constraint(
        'ltiassignmentid_courseid_unique', 'Assignment', type_='unique'
    )
    op.drop_column('Assignment', 'lti_grade_service_data')
    # ### end Alembic commands ###
