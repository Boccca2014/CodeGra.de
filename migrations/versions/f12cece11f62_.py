"""Add assignment kind column

Revision ID: f12cece11f62
Revises: d9b3486b2e52
Create Date: 2020-08-11 17:11:48.141935

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision = 'f12cece11f62'
down_revision = 'd9b3486b2e52'
branch_labels = None
depends_on = None

enum_name = 'assignmentkind'


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    context = op.get_context()
    bind = op.get_bind()
    if context.bind.dialect.name == 'postgresql':
        has_size_type = bind.execute(
            text(
                """
            select exists (select 1 from pg_type where typname = :enum_name)"""
            ),
            enum_name=enum_name
        ).scalar()
        if not has_size_type:
            bind.execute(text(f"CREATE TYPE {enum_name} AS ENUM ()"))

    op.sync_enum_values('public', enum_name, [], ['normal', 'exam'])
    op.add_column(
        'Assignment',
        sa.Column(
            'kind',
            sa.Enum('normal', 'exam', name='assignmentkind'),
            server_default='normal',
            nullable=False
        )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('Assignment', 'kind')
    # ### end Alembic commands ###
