"""Merge AT and CF

Revision ID: 426a7ac23ea6
Revises: 78e54763e1d4
Create Date: 2019-09-27 16:07:27.452624

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '426a7ac23ea6'
down_revision = '78e54763e1d4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'AutoTest',
        sa.Column(
            'results_always_visible',
            sa.Boolean(),
            nullable=True,
            server_default='false'
        )
    )
    op.add_column(
        'AutoTestResult',
        sa.Column(
            'final_result',
            sa.Boolean(),
            nullable=False,
            server_default='false'
        )
    )
    op.add_column(
        'AutoTestRun',
        sa.Column(
            'batch_run_done',
            sa.Boolean(),
            nullable=False,
            server_default='false'
        )
    )

    conn = op.get_bind()
    tests = [{
        'id': test[0],
        'cf': test[1],
        'test_id': test[2],
    } for test in conn.execute(
        'select id, is_continuous_feedback_run, auto_test_id from'
        ' "AutoTestRun"'
    )]
    has_at = {t['test_id'] for t in tests if not t['cf']}

    for test in tests:
        if test['cf']:
            conn.execute((
                'update "AutoTest" set results_always_visible = true where id'
                ' = {}'
            ).format(test['test_id']))
        else:
            conn.execute((
                'update "AutoTestResult" set final_result = true where'
                ' auto_test_run_id = {}'
            ).format(test['id']))

    for test in tests:
        if test['cf'] and test['test_id'] in has_at:
            conn.execute((
                'delete from auto_test_step_result where auto_test_result_id'
                ' in (select id from "AutoTestResult" where auto_test_run_id ='
                ' {})'
            ).format(test['id']))
            conn.execute(
                ('delete from "AutoTestResult" where auto_test_run_id = {}'
                 ).format(test['id'])
            )
            conn.execute(
                'delete from "AutoTestRun" where id = {}'.format(
                    test['id']
                )
            )

    op.drop_column('AutoTestRun', 'state')
    op.drop_column('AutoTestRun', 'is_continuous_feedback_run')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'AutoTestRun',
        sa.Column(
            'is_continuous_feedback_run',
            sa.BOOLEAN(),
            server_default=sa.text('false'),
            autoincrement=False,
            nullable=False
        )
    )
    op.add_column(
        'AutoTestRun',
        sa.Column(
            'state',
            postgresql.ENUM(
                'not_started',
                'running',
                'done',
                'timed_out',
                'crashed',
                'starting',
                'changing_runner',
                'waiting_for_runner',
                name='autotestrunstate'
            ),
            autoincrement=False,
            nullable=False
        )
    )
    op.drop_column('AutoTestRun', 'batch_run_done')
    op.drop_column('AutoTestResult', 'final_result')
    op.drop_column('AutoTest', 'results_always_visible')
    # ### end Alembic commands ###
