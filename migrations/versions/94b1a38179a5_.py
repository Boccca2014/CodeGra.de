"""Add enum to determine state of proxy

Revision ID: 94b1a38179a5
Revises: 182af783a7ee
Create Date: 2020-03-04 15:41:59.344762

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = '94b1a38179a5'
down_revision = '182af783a7ee'
branch_labels = None
depends_on = None

ENUM_OPTS = ['before_post', 'in_use', 'deleted']


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    context = op.get_context()
    if context.bind.dialect.name == 'postgresql':
        bind = op.get_bind()
        has_size_type = bind.execute(
            "select exists (select 1 from pg_type "
            "where typname='proxystate')"
        ).scalar()
        if not has_size_type:
            op.execute("CREATE TYPE proxystate AS ENUM ()")

    op.sync_enum_values(
        'public',
        'proxystate',
        [],
        ENUM_OPTS,
    )
    op.add_column(
        'proxy',
        sa.Column(
            'state',
            sa.Enum(*ENUM_OPTS, name='proxystate'),
            nullable=False,
            server_default='before_post'
        )
    )
    op.add_column('proxy', sa.Column('password', sa.Unicode(), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('proxy', 'state')
    op.drop_column('proxy', 'password')
    op.sync_enum_values(
        'public',
        'proxystate',
        ENUM_OPTS,
        [],
    )
    # ### end Alembic commands ###
