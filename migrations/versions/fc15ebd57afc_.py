"""Add after_run enum column

Revision ID: fc15ebd57afc
Revises: 329b236f5cb0
Create Date: 2019-05-23 19:26:02.075932

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc15ebd57afc'
down_revision = '329b236f5cb0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    context = op.get_context()
    if context.bind.dialect.name == 'postgresql':
        bind = op.get_bind()
        has_size_type = bind.execute(
                "select exists (select 1 from pg_type "
                "where typname='autotestafterrunstate')").scalar()
        if not has_size_type:
            op.execute("CREATE TYPE autotestafterrunstate AS ENUM ('not_called', 'calling', 'called')")

    op.add_column('AutoTestRunner', sa.Column('after_run', sa.Enum('not_called', 'calling', 'called', name='autotestafterrunstate'), server_default='called', nullable=False))
    op.drop_column('AutoTestRunner', 'after_run_called')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('AutoTestRunner', sa.Column('after_run_called', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.drop_column('AutoTestRunner', 'after_run')
    # ### end Alembic commands ###
