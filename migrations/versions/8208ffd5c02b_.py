"""Add tables for github webhook support

Revision ID: 8208ffd5c02b
Revises: 76c1a7c2f156f7a2d5aa
Create Date: 2019-11-04 15:44:26.326562

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = '8208ffd5c02b'
down_revision = '76c1a7c2f156f7a2d5aa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('webhook_base',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('secret', sa.Unicode(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('webhook_type', sa.Enum('git', name='webhooktype'), nullable=False),
    sa.ForeignKeyConstraint(['assignment_id'], ['Assignment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    context = op.get_context()
    if context.bind.dialect.name == 'postgresql':
        bind = op.get_bind()
        has_size_type = bind.execute(
                "select exists (select 1 from pg_type "
                "where typname='workorigin')").scalar()
        if not has_size_type:
            op.execute("CREATE TYPE workorigin AS ENUM ('uploaded_files', 'github', 'gitlab')")

    op.add_column('Course', sa.Column('ssh_key', sa.LargeBinary(), nullable=True))
    op.add_column('Course', sa.Column('ssh_username', sa.Unicode(), nullable=True))
    op.add_column('Work', sa.Column('work_origin', sa.Enum('uploaded_files', 'github', 'gitlab', name='workorigin'), server_default='uploaded_files', nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('Work', 'work_origin')
    op.drop_column('Course', 'ssh_key')
    op.drop_table('webhook_base')
    # ### end Alembic commands ###
