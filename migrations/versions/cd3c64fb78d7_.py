"""Add 'position' column to RubricRow table and order all existing
rubric rows by their 'created_at'

Revision ID: cd3c64fb78d7
Revises: 3a74e01ebcbf9099d761
Create Date: 2020-09-21 14:56:37.847194

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from sqlalchemy.sql import text

from collections import defaultdict

# revision identifiers, used by Alembic.
revision = 'cd3c64fb78d7'
down_revision = '3a74e01ebcbf9099d761'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    op.add_column('RubricRow', sa.Column('position', sa.Integer()))

    existing_rows = bind.execute(
        text('''
        SELECT id, created_at, "Assignment_id" FROM "RubricRow"
        ORDER BY created_at
        ''')
    ).fetchall()

    rows_per_assig = defaultdict(list)
    for id, created_at, assignment_id in existing_rows:
        rows_per_assig[assignment_id].append({
            'id': id,
            'created_at': created_at,
        })

    for rows in rows_per_assig.values():
        sorted_rows = sorted(
            rows,
            key=lambda row: row['created_at'],
        )
        for i, row in enumerate(sorted_rows):
            bind.execute(
                text(
                    '''UPDATE "RubricRow" SET position = :position
                    WHERE id = :row_id''',
                    position=i,
                    row_id=row['id'],
                ),
            )

    op.alter_column('RubricRow', 'position', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('RubricRow', 'position')
    # ### end Alembic commands ###
