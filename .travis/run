#!/bin/bash
# SPDX-License-Identifier: AGPL-3.0-only

res="127"

echo "Running test with pwd: $(pwd)"

set -o xtrace

if [[ "$TO_RUN" = "postgres-test" ]]; then
    TEST_FLAGS="--postgresql=travis_ci_test"
    SQLALCHEMY_DATABASE_URI='postgresql:///travis_ci_test' ./manage.py db upgrade
fi

case "$TO_RUN" in
    "coverage")
        TEST_FLAGS="--postgresql=travis_ci_test"
        SQLALCHEMY_DATABASE_URI='postgresql:///travis_ci_test' ./manage.py db upgrade
        pytest --cov psef --cov-report term-missing "$(pwd)/psef_test/" -vvvv
        res="$?"
        if [[ "$res" -eq 0 ]]; then
            pytest --cov psef \
                   --cov-append \
                   --cov-report term-missing \
                   --doctest-modules psef \
                   -vvvv
            res="$?"
        fi
        set +o xtrace
        ;;
    "tests"|"postgres-test")
        pytest -vvvv $TEST_FLAGS "$(pwd)/psef_test/"
        res="$?"
        if [[ "$res" -eq 0 ]]; then
            cd docs || exit 1
            make html
            res="$?"
            cd .. || exit 1
        fi
        if [[ "$res" -eq 0 ]]; then
            pytest --doctest-modules psef -vvvv
            res="$?"
        fi
        set +o xtrace
        ;;
    "lint")
        make pylint
        res1="$?"

        make privacy_statement
        [[ -z "$NO_INSTALL" ]] && npm install
        npm run lint
        res2="$?"

        make mypy
        res3="$?"

        out="$(make isort_check)"
        res4=$?
        if [[ "$res4" -ne 0 ]]; then
            echo "$out"
        fi

        yapf -vv -rd "$(pwd)/psef" "$(pwd)/psef_test"
        res5=$?

        out="$(npm run check-format)"
        res6=$?
        if [[ "$res6" -ne 0 ]]; then
            echo "$out"
        fi

        res="$(bc <<< "$res1 + $res2 + $res3 + $res4 + $res5 + $res6")"
        set +x xtrace
        ;;
    "js_unit")
        make privacy_statement
        [[ -z "$NO_INSTALL" ]] && npm install
        npm run unit
        res="$?"
        set +x xtrace
        ;;

esac

set +o xtrace

exit "$res"
