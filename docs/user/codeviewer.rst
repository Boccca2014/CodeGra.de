.. _codeviewer-chapter:

Code Viewer
===============
The CodeGrade Code Viewer is the online grading and reviewing environment especially
designed for programming assignments. It provides teachers with numerous tools
to make reviewing and grading more convenient and efficient and displays feedback and
grade in a more intuitive way to the students. Additionally it provides students an
intuitive environment to receive feedback in.

The Code Viewer is displayed after navigating to an individual submission. These can be
found via the 'Assignments' menu and selecting the assignment to review.

.. _codeviewer-teachers:

Code Viewer for Teachers
-------------------------
The Code Viewer consists of up to four tabs: **Code**, **Feedback overview**,
optionally **AutoTest** and optionally **Teacher Revision**.

The **Code** tab shows an overview of all handed in code and other files. It is
possible to browse through all handed in files and folders.

.. note::
    Supported archives are automatically extracted by CodeGrade after handing in.

The Code Viewer displays the selected file with correct highlighting, optional
whitespace characters and line numbering. Furthermore, it can render markdown
and HTML files, and display PDF and image files. Optional feedback generated by
linters is indicated by red line numbers, the feedback generated by the linters
can be displayed by a mouse over. The Code Viewer displays the selected file
from the file browser, which shows an hierarchical overview of all submitted
files.

The **Feedback overview** tab provides a clear overview of all given feedback on
the submission, this includes inline comments and general feedback.

The **AutoTest** tab shows an overview of the AutoTest results and optionally
Continuous Feedback output.

The **Teacher Revision** shows the teacher revision, if available.

Additional features in the Code Viewer aid the grading and reviewing process. These features are described below.

File browser
~~~~~~~~~~~~

The file browser shows a hierarchical overview of all submitted files.
Optionally it can also show suggested changes by the teacher, or generated
files.

Files indicated with ``diff`` have a teacher revision (optionally created
with the `filesystem <https://fs-docs.codegra.de>`__). If available, the
teacher's revision can be viewed by expanding the Teacher revision tree. Files
that were not changed by the teacher have a slightly faded color, to make it
easier to spot which files have changed.

When a teacher revision is available, there is also a Teacher diff category in
the file browser, which can be used to view a line-by-line diff of the files
changed by the teacher. You can go to the diff viewer by clicking the ``diff``
label next to changed files.

The file browser may also have a category for AutoTest generated files when the
AutoTest was configured to generate output for review. See :ref:`Automatically
generated output <autotest-automatically-generated-output>`
for instructions on generating output in an AutoTest.

Inline feedback
~~~~~~~~~~~~~~~~~~~~~~
Oftentimes, feedback for specific lines or blocks of code is wanted to make specific errors clear to students.
CodeGrade enables this with the addition of line feedback.

Feedback on a specific line can be given by clicking on this line of code in the Code Viewer. Feedback can be
written in the appeared dialog and saved with the :fa:`check` button. Clicking on previously placed line
for line feedback displays this same dialog and clicking the :fa:`times` button will remove the comment.

.. _codeviewer-snippets:

Snippets
^^^^^^^^^
It is not unusual that identical line feedback comments apply to multiple cases or students. Snippets can be used
to efficiently but thoroughly cover all these reoccurring comments. Snippets are named saved comments that can be quickly added in the reviewing process.

.. note:: Personal (:fa:`user-circle-o`) snippets are saved to your CodeGrade account and can be used on any assignment in any course you grade. Course (:fa:`book`) snippets are set up for a specific course and are shared by all graders in that course.

New personal snippets can be added through the :ref:`profile page <preferences-chapter>`
and via the :fa:`plus` button in the line of line feedback dialog. The latter
makes it possible to save existing line for line feedback comments. After
clicking this button the snippet can be named and saved for future use. To use
your saved snippet, simply type in the given name and press the :kbd:`Tab` keyboard key
to autocomplete it to the saved comment.

New course snippets can be added by the teacher of a course on the
:ref:`course management page <course-management>`.

.. note:: It is in most cases recommended to use a short keyword for the snippet.

Rubrics
~~~~~~~~~
If a rubric is available for the assignment it can be found under the :fa:`th` button.
The matching rubric items can be selected per category in the rubric. Selecting other rubric items will
automatically update the grade, this is linear to the points of the rubric.

.. warning:: Alterations in the rubric have to be manually saved with the 'submit' button (unless the ``incremental_rubric_submission`` config setting is enabled).

General feedback and grade
~~~~~~~~~~~~~~~~~~~~~~~~~~~
A final grade can be given using the input field underneath the Code Viewer.

.. note:: The grade generated with the rubric can be overwritten.

Additional general feedback can be given with the menu found under the :fa:`pencil-square-o` button.

Grade History
~~~~~~~~~~~~~~
A detailed overview of the previous grades to the current submission can be found under the
:fa:`history` button. This overviews specifies the grade, grader, date and time and whether this
grade was automatically generated from the rubric. Students can normally not see the grade history overview.

.. note:: Each individual revision of the rubric will add a new entry in the grade history overview.


Download feedback or assignment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
It is sometimes necessary to manually download the submission or its feedback. These can both be
separately downloaded using the :fa:`download` button. The assignment can be downloaded as archive.
An overview of all feedback, including line feedback, linter comments and general grade and feedback can be download as
plain text file.

.. note:: Make sure pop-ups from CodeGrade are allowed in your browser if downloading fails.
.. note:: Although it is possible to manually download individual submissions, we recommend using the filesystem.

Deleting a submission
~~~~~~~~~~~~~~~~~~~~~~
CodeGrade offers the functionality to remove submissions, this can be done using the red :fa:`times` button.

.. warning:: Deleting a submission will result in effectively removing all information about the submission (including plagiarism results) and is irreversible!

.. _codeviewer-students:

Code Viewer for Students
-------------------------
Handed in programming assignments can be displayed using CodeGrade's Code Viewer. The Code Viewer in essence
provides an overview of your handed in files and the feedback gotten.

Up to four tabs are available in the Code Viewer for students: **Code**,
**Feedback overview**, optionally **AutoTest** and optionally **Teacher
Revision**.

The final grade is displayed on the bottom of the screen, if available.
If a rubric is available for the assignment it can be found under the :fa:`th` button, next to this final grade.

.. note::
    The redesigned submission page deprecates the old **Overview mode**.

.. _codeviewer-settings:

Settings Tab
--------------------
The Code Viewer settings can be found under the :fa:`cog` button. And allows for configuring:

* Whitespace characters' visibility.
* Programming language and its corresponding highlighting (usually should be left default).
* Font size of the text in the Code Viewer.
* Theme to light or dark.

.. note:: The font and theme settings are saved site-wide and can also be set on the Profile page.
